{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#ASIAN ARITHMETIC OPTION\n",
    "##BASIC CODE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.6377593012661418"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import scipy as sp\n",
    "S=41\n",
    "K=40\n",
    "T=1.0\n",
    "r=0.08\n",
    "sigma=0.3\n",
    "n_simulation=100\n",
    "n_steps=3\n",
    "dt=T/n_steps\n",
    "call=sp.zeros([n_simulation], dtype=float)\n",
    "put=sp.zeros([n_simulation], dtype=float)\n",
    "for j in range(0, n_simulation):\n",
    "    sT=S\n",
    "    total=0\n",
    "    for i in range(0,int(n_steps)):\n",
    "        e=sp.random.normal()\n",
    "        sT*=sp.exp((r-0.5*sigma*sigma)*dt+sigma*e*sp.sqrt(dt))\n",
    "        total+=sT\n",
    "    price_average=total/n_steps\n",
    "    call[j]=max(price_average-K,0)\n",
    "    put[j]=max(K-price_average,0)\n",
    "call_price=sp.mean(call)*sp.exp(-r*T)\n",
    "call_price\n",
    "put_price=sp.mean(put)*sp.exp(-r*T)\n",
    "put_price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.0263728324475787"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "call_price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.0733968814270249"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "put_price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
